<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="_AutoUpdateFundInfoWhenStart" xml:space="preserve">
    <value>啟動軟體時自動獲取所有資金資料（可能會影響啟動速度）</value>
  </data>
  <data name="_AutoUpdatePriceAndIndexWhenStart" xml:space="preserve">
    <value>啟動軟體時自動獲取匯率和指數資料（不會影響啟動速度）</value>
  </data>
  <data name="_AutoUpdateTickersWhenStart" xml:space="preserve">
    <value>啟動軟體時自動獲取所有報價資料（不會影響啟動速度）</value>
  </data>
  <data name="_BitstampClientId" xml:space="preserve">
    <value>Bitstamp客戶ID號</value>
  </data>
  <data name="_ConfigApiKey" xml:space="preserve">
    <value>配置即時交易金鑰</value>
  </data>
  <data name="_Confirm" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="_DefaultAndRange" xml:space="preserve">
    <value>說明：缺省為15秒(15000)，範圍從1秒(1000)到5分鐘(300000）</value>
  </data>
  <data name="_Millisecond" xml:space="preserve">
    <value>毫秒</value>
  </data>
  <data name="_NoteBitstampClientId" xml:space="preserve">
    <value>說明：Bitstamp的交易API除key還需要客戶ID號，就是您登錄的Client Id</value>
  </data>
  <data name="_NoteNeedKey" xml:space="preserve">
    <value>說明：資金管理和即時交易需要您配置公開金鑰和私密金鑰</value>
  </data>
  <data name="_OtherOption" xml:space="preserve">
    <value>其它選項設置</value>
  </data>
  <data name="_PleaseConfigYourApiKey" xml:space="preserve">
    <value>請配置您的API金鑰</value>
  </data>
  <data name="_PleaseRestartApplicationAfterConfirm" xml:space="preserve">
    <value>修改後請點擊確認並重啟軟體</value>
  </data>
  <data name="_PleaseRestartApplicationAfterConfirm1" xml:space="preserve">
    <value>修改後請點擊確認並重啟軟體</value>
  </data>
  <data name="_PleaseRestartApplicationAfterConfirm2" xml:space="preserve">
    <value>修改後請點擊確認並重啟軟體</value>
  </data>
  <data name="_PleaseSelectYourTradePairs" xml:space="preserve">
    <value>請選擇您關注的交易對</value>
  </data>
  <data name="_sApiKey" xml:space="preserve">
    <value>的API金鑰</value>
  </data>
  <data name="_SelectLocalCurrency" xml:space="preserve">
    <value>請選擇您的本地貨幣</value>
  </data>
  <data name="_SelectTradePairs" xml:space="preserve">
    <value>選擇關注的交易對</value>
  </data>
  <data name="_SetTimeoutOfAuthorizeApi" xml:space="preserve">
    <value>獲取授權API資料的超時時間</value>
  </data>
  <data name="_SupportPairs" xml:space="preserve">
    <value>支援的所有交易對</value>
  </data>
  <data name="_Url" xml:space="preserve">
    <value>網址</value>
  </data>
</root>